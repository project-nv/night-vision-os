// Navy ~ 0.1-lite

[OVERLAY name=Channel, ctx=Canvas, author=ChartMaster, verion=1.0.0]

// Overlay props
prop('color', { type: 'Color', def: '#b41d70' })
prop('backColor', { type: 'Color', def: $props.color + '11' })
prop('lineWidth', { type: 'number', def: 1 })
prop('showMid', { type: 'boolean', def: true })

// Draw call
draw(ctx) {
     // Background
    const data = $core.data
    const view = $core.view
    const layout = $core.layout
    ctx.beginPath()
    ctx.fillStyle = $props.backColor
    for (var i = view.i1, n = view.i2; i <= n; i++) {
        let p = data[i]
        let x = layout.ti2x(p[0], i)
        let y = layout.value2y(p[1] || undefined) 
        ctx.lineTo(x, y)
    }
    for (var i = view.i2, i1 = view.i1; i >= i1; i--) {
        let p = data[i]
        let x = layout.ti2x(p[0], i)
        let y = layout.value2y(p[3] || undefined)
        ctx.lineTo(x, y)
    }
    ctx.fill()
    // Lines
    // TODO: can be faster by combining line 
    // into one path with moveTo in b/w
    ctx.lineWidth = $props.lineWidth
    ctx.strokeStyle = $props.color
    // Top line
    ctx.beginPath()
    for (var i = view.i1, n = view.i2; i <= n; i++) {
        let p = data[i]
        let x = layout.ti2x(p[0], i)
        let y = layout.value2y(p[1] || undefined)
        ctx.lineTo(x, y)
    }
    ctx.stroke()
    // Bottom line
    ctx.beginPath()
    for (var i = view.i1, n = view.i2; i <= n; i++) {
        let p = data[i]
        let x = layout.ti2x(p[0], i)
        let y = layout.value2y(p[3] || undefined)
        ctx.lineTo(x, y)
    }
    ctx.stroke()
    // Middle line
    if (!$props.showMid) return
    ctx.beginPath()
    for (var i = 0; i < data.length; i++) {
        let p = data[i]
        let x = layout.ti2x(p[0], i)
        let y = layout.value2y(p[2] || undefined)
        ctx.lineTo(x, y)
    }
    ctx.stroke()
}

// Legend, defined as pairs [value, color]
legend(x) => $props.showMid ? [
    [x[1], $props.color],
    [x[2], $props.color],
    [x[3], $props.color]
] : [
    [x[1], $props.color],
    [x[3], $props.color]
]
